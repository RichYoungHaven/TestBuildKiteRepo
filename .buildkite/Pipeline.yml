steps:
  - label: ":gb: tf validate :terraform:"
    key: "validate-terraform"
    command: .buildkite/scripts/placeholder.sh
  
  - label: ":flag-gb: terraform: static analysis: :aws-lambda:"
    key: "checkov"
    command: .buildkite/scripts/placeholder.sh

  - wait

  - label: ":gb: dev build & apply :terraform:"
    depends_on:
      - "validate-terraform"
    command: .buildkite/scripts/placeholder.sh

  - label: ":gb: staging build & apply :terraform:"
    depends_on:
      - "validate-terraform"
    command: .buildkite/scripts/placeholder.sh
    env:
      ENV: staging
    if: build.branch == pipeline.default_branch

  - input: ":gb: deploy to qa? :thumbsup:"
    key: "block-qa"
    if: build.branch == pipeline.default_branch
    prompt: "Confirm deployment to QA?"

  - label: ":gb: qa build & apply :terraform:"
    depends_on:
      - "block-qa"
      - "validate-terraform"
    command: .buildkite/scripts/placeholder.sh
    if: build.branch == pipeline.default_branch

  - input: ":gb: deploy to production? :thumbsup:"
    key: "block-production"
    if: build.branch == pipeline.default_branch
    prompt: "Confirm deployment to Production?"

  - label: ":gb: prod build & apply :terraform:"
    depends_on:
      - "block-production"
      - "validate-terraform"
    command: .buildkite/scripts/placeholder.sh
    if: build.branch == pipeline.default_branch

